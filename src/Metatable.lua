---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by galax.
--- DateTime: 6/6/2020 8:01 PM
---

local vector3d = {}
local meta = {}

-- equivalent

----------------------------------------------------------------
-- Declare a new Vector3d constructor
----------------------------------------------------------------

function vector3d.new(x,y,z)
    local v = {x = x, y = y, z = z}
    setmetatable(v, meta)
    return v
end

----------------------------------------------------------------
-- Similar to overloaded operator
----------------------------------------------------------------

function vector3d.add(v1, v2)
    --TODO:
    local newVector = {x = v1.x+v2.x, y = v1.y+v2.y, z = v1.z+v2.z}
    return newVector
end
meta.__add = vector3d.add

function vector3d.tostring(v)
    return "("..v.x..","..v.y..","..v.z..")"
end
meta.__tostring = vector3d.tostring

----------------------------------------------------------------
-- Create two vector3d tables
----------------------------------------------------------------

position = vector3d.new(5.0,5.0,5.0)
velocity = vector3d.new(10.0,-3.5,0.0)
print("New vector is created: ("..velocity.x..","..velocity.y..","..velocity.z..")")
print(position)
print(velocity)
local newVector = position+velocity
print("New vector is created: ("..newVector.x..","..newVector.y..","..newVector.z..")")


vector3d["new"] = function(x,y,z)

end